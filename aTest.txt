- Before starting the evaluation, run this command in the terminal: 
"docker stop $(docker ps -qa); docker rm $(docker ps -qa); docker rmi -f $(docker images -qa); docker volume rm $(docker volume ls -q); docker network rm $(docker network ls -q) 2>/dev/null"

- Read the docker-compose.yml file. There musn't be 'network: host' in it or 'links:'. Otherwise, the evaluation ends now.

- Read the docker-compose.yml file. There must be 'network(s)' in it. Otherwise, the evaluation ends now.

- Examine the Makefile and all the scripts in which Docker is used. There musn't be '--link' in any of them. Otherwise, the evaluation ends now.

- Examine the Dockerfiles. If you see 'tail -f' or any command run in background in any of them in the ENTRYPOINT section, the evaluation ends now. Same thing if 'bash' or 'sh' are used but not for running a script (e.g, 'nginx & bash' or 'bash').
If the entrypoint is a script (e.g., ENTRYPOINT ["sh", "my_entrypoint.sh"], ENTRYPOINT ["bash", "my_entrypoint.sh"]), ensure it runs no program
in background (e.g, 'nginx & bash').

- Examine all the scripts in the repository. Ensure none of them runs an infinite loop. The following are a few examples of prohibited commands: 'sleep infinity', 'tail -f /dev/null', 'tail -f /dev/random'

- The evaluated person has to explain to you in simple terms:
    - How Docker and docker compose work
    - The difference between a Docker image used with docker compose and without docker compose
    - The be nefit of Docker compared to VMs
    - The pertinence of the directory structure required for this project (an example is provided in the subject's PDF file).

- Ensure that the WordPress website is properly installed and configured (you shouldn't see the WordPress Installation page). To access it, open https://login.42.fr in your browser, where login is the login of the evaluated student. You shouldn't be able to access the site via
http://login.42.fr. If something doesn't work as expected, the evaluation process ends now.


    (verif ce que c'est dockerhub)
- Make sure the evaluated student has written their own Dockerfiles and built their own Docker images. Indeed, it is forbidden to use ready-made ones or to use services such as DockerHub.

- Ensure that docker-network is used by checking the docker-compose.yml file. Then run the 'docker network ls' command to verify that a network is visible.

- The evaluated student has to give you a simple explanation of docker-network. If any of the above points is not correct, the evaluation process ends now.

- Using the 'docker compose ps' command, ensure that the container was created (using the flag '-p' is authorized if necessary).

- Try to access the service via http (port 80) and verify that you cannot connect.


- Using the 'docker compose ps' command, ensure that the container was created (using the flag '-p' is authorized if necessary).

- Ensure that there is a Volume. To do so: Run the command 'docker volume ls' then 'docker volume inspect <volume name>'. Verify that the result in the standard output contains the path '/home/login/data/', where login is the login of the evaluated student.

- Ensure that you can add a comment using the available WordPress user.

- Ensure that there is a Volume. To do so: Run the command 'docker volume ls' then 'docker volume inspect <volume name>'. Verify that the result in the standard output contains the path '/home/login/data/', where login is the login of the evaluated student.

- The evaluated student must be able to explain you how to login into the database. Verify that the database is not empty. If any of the above points is not correct, the evaluation process ends now.

